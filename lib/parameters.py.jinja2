# Template to take Google colab parameters and and generate a parameters.py file with python type hinting 
# and scoping based methods they're instantiated in.
# 'parameters.py' will be automatically generated. Do not edit -- rather, rerun the file "extract_colab_parameters.py"
# This is from a jinja2 template.
# example input file: Deforum_Stable_Diffusion.ipynb

        
{% for method in methods -%} 
class {{ method }}:
  def __init__(self, **kwargs):
      super().__init__()
{%- for obj in objects -%}
  {%- if obj.method == method %}
    {%- if obj.type in ["bool","float","int"] %}
      self.{{ obj.name }}: {{ obj.type }} = kwargs.get("{{ obj.name }}", {{ obj.default }}){% if obj.constraints %}  # {{ obj.constraints }}{% endif %}
    {%- elif obj.type is none %}
      self.{{ obj.name }} = kwargs.get("{{ obj.name }}", {{ "'" + obj.default.replace("'", "") + "'" if obj.constraints else obj.default.replace("'", "") }}){% if obj.constraints %}  # {{ obj.constraints }}{% endif %}
    {%- else %}
      self.{{ obj.name }}: {{ obj.type }} = kwargs.get("{{ obj.name }}", "{{ obj.default.replace("'", "") }}"){% if obj.constraints %}  # {{ obj.constraints }}{% endif %}
    {%- endif %}
  {%- endif %}
{%- endfor %}
{% endfor %}
